// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// french_stemmer
CharacterVector french_stemmer(Rcpp::StringVector words);
RcppExport SEXP _unine_french_stemmer(SEXP wordsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type words(wordsSEXP);
    rcpp_result_gen = Rcpp::wrap(french_stemmer(words));
    return rcpp_result_gen;
END_RCPP
}
// german_stemmer
CharacterVector german_stemmer(Rcpp::StringVector words);
RcppExport SEXP _unine_german_stemmer(SEXP wordsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type words(wordsSEXP);
    rcpp_result_gen = Rcpp::wrap(german_stemmer(words));
    return rcpp_result_gen;
END_RCPP
}
// spanish_stemmer
CharacterVector spanish_stemmer(Rcpp::StringVector words);
RcppExport SEXP _unine_spanish_stemmer(SEXP wordsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type words(wordsSEXP);
    rcpp_result_gen = Rcpp::wrap(spanish_stemmer(words));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_unine_french_stemmer", (DL_FUNC) &_unine_french_stemmer, 1},
    {"_unine_german_stemmer", (DL_FUNC) &_unine_german_stemmer, 1},
    {"_unine_spanish_stemmer", (DL_FUNC) &_unine_spanish_stemmer, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_unine(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
